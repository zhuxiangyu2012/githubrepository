<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 缓存管理器，使用Ehcache实现 -->
	<bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:ehcache.xml"></property>
	</bean>

	<!-- 凭证匹配器 -->
	<bean id="hashMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<property name="hashAlgorithmName" value="md5"></property>
	</bean>
	
	<!-- Reaml 实现 -->
	<bean id="userRealm" class="com.komia.shiro.UserRealm">
		<property name="credentialsMatcher" ref="hashMatcher"></property>
		<property name="cachingEnabled" value="true"></property>
		<property name="authenticationCachingEnabled" value="true"></property>
		<property name="authenticationCacheName" value="shiro.authenticationCache"></property>
		<property name="authorizationCachingEnabled" value="true"></property>
		<property name="authorizationCacheName" value="shiro.authorizationCache"></property>
	</bean>
	
	<!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
    </bean>

    <!-- 会话DAO -->
    <bean id="sessionDAO" class="com.komia.shiro.KomiaSessionDAO">
        <property name="activeSessionsCacheName" value="shiro.activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>

    <!-- 会话验证调度器 -->
    <bean id="sessionValidationScheduler" class="com.komia.shiro.KomiaSessionValidationScheduler">
        <property name="interval" value="1800000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="1200000"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
        <property name="sessionIdUrlRewritingEnabled" value="false"></property>
    </bean>
	
	
	<!-- 自定义的URL权限解析器 -->
	<bean id="urlPermissionResolver" class="com.komia.shiro.UrlPermissionResolver"></bean>
    
    <!-- Shiro核心安全处理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
    	<property name="realm" ref="userRealm"></property>
    	<property name="authorizer.permissionResolver" ref="urlPermissionResolver"></property>
    	<property name="cacheManager" ref="shiroCacheManager"></property>
    	<property name="sessionManager" ref="sessionManager"/>
    </bean>
    
    <!-- 自定义的资源检查过滤器 -->
    <bean id="resourceCheckFilter" class="com.komia.shiro.ResourceCheckFilter"></bean>
    
    <!-- shiro的web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
	    <property name="securityManager" ref="securityManager"/>
	    <property name="loginUrl" value="/login"/>
	    <property name="unauthorizedUrl" value="/unauth"/> 
	    <!-- override these for application-specific URLs if you like:
	    <property name="successUrl" value="/home.jsp"/>-->
	    
	    <property name="filterChainDefinitions">
	        <value>
	            /login = anon
	            /unauth = anon
	            /logout = logout
	            /** = authc,resourceCheckFilter
	        </value>
	    </property>
	</bean>
	
	<!-- shiro生命周期处理器 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
</beans>  